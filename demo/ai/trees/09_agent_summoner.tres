[gd_resource type="BehaviorTree" load_steps=35 format=3 uid="uid://cpxk7jnqpwwlc"]

[sub_resource type="BlackboardPlan" id="BlackboardPlan_58oq1"]
var/speed/name = &"speed"
var/speed/type = 3
var/speed/value = 300.0
var/speed/hint = 1
var/speed/hint_string = "10,1000,10"
var/summon_cooldown/name = &"summon_cooldown"
var/summon_cooldown/type = 1
var/summon_cooldown/value = false
var/summon_cooldown/hint = 0
var/summon_cooldown/hint_string = ""

[sub_resource type="BBNode" id="BBNode_b7euf"]
saved_value = NodePath("AnimationPlayer")
resource_name = "AnimationPlayer"

[sub_resource type="BTPlayAnimation" id="BTPlayAnimation_sot6a"]
animation_player = SubResource("BBNode_b7euf")
animation_name = &"idle"
blend = 0.1

[sub_resource type="BTRandomWait" id="BTRandomWait_0wc6p"]

[sub_resource type="BTSequence" id="BTSequence_kwkxc"]
custom_name = "Summoning sickness"
children = [SubResource("BTPlayAnimation_sot6a"), SubResource("BTRandomWait_0wc6p")]

[sub_resource type="BTRunLimit" id="BTRunLimit_x2jr4"]
children = [SubResource("BTSequence_kwkxc")]

[sub_resource type="BBVariant" id="BBVariant_y3x7n"]
type = 2
saved_value = 6
resource_name = "6"

[sub_resource type="BTCheckAgentProperty" id="BTCheckAgentProperty_olmdj"]
property = &"summon_count"
check_type = 1
value = SubResource("BBVariant_y3x7n")

[sub_resource type="BTComment" id="BTComment_ef6y0"]
custom_name = "Variable $summon_cooldown is updated by the Cooldown task below"

[sub_resource type="BBVariant" id="BBVariant_hgde2"]
type = 1
saved_value = false
resource_name = "false"

[sub_resource type="BTCheckVar" id="BTCheckVar_hc3o3"]
variable = &"summon_cooldown"
value = SubResource("BBVariant_hgde2")
children = [SubResource("BTComment_ef6y0")]

[sub_resource type="BBNode" id="BBNode_q8bei"]
saved_value = NodePath("AnimationPlayer")
resource_name = "AnimationPlayer"

[sub_resource type="BTPlayAnimation" id="BTPlayAnimation_6leni"]
animation_player = SubResource("BBNode_q8bei")
animation_name = &"summon"
blend = 0.1

[sub_resource type="BTWait" id="BTWait_8og18"]
duration = 0.5

[sub_resource type="GDScript" id="GDScript_k855k"]
script/source = "@tool
extends BTAction
## Selects a random position nearby within the specified range and stores it on the blackboard. [br]
## Returns [code]SUCCESS[/code].

## Minimum distance to the desired position.
@export var range_min: float = 300.0

## Maximum distance to the desired position.
@export var range_max: float = 500.0

## Blackboard variable that will be used to store the desired position.
@export var position_var: StringName = &\"pos\"


# Display a customized name (requires @tool).
func _generate_name() -> String:
	return \"SelectRandomNearbyPos  range: [%s, %s]  ➜%s\" % [
		range_min, range_max,
		LimboUtility.decorate_var(position_var)]


# Called each time this task is ticked (aka executed).
func _tick(_delta: float) -> Status:
	var pos: Vector2
	var is_good_position: bool = false
	while not is_good_position:
		# Randomize until we find a good position (good position == not outside the arena).
		var angle: float = randf() * TAU
		var rand_distance: float = randf_range(range_min, range_max)
		pos = agent.global_position + Vector2(sin(angle), cos(angle)) * rand_distance
		is_good_position = agent.is_good_position(pos)
	blackboard.set_var(position_var, pos)
	return SUCCESS
"

[sub_resource type="BTAction" id="BTAction_yeyns"]
script = SubResource("GDScript_k855k")
position_var = &"minion_pos"

[sub_resource type="BBVariant" id="BBVariant_wfjwy"]
type = 5
value_source = 1
variable = &"minion_pos"
resource_name = "$minion_pos"

[sub_resource type="BBNode" id="BBNode_v271m"]
saved_value = NodePath(".")
resource_name = "."

[sub_resource type="BTCallMethod" id="BTCallMethod_4ath5"]
node = SubResource("BBNode_v271m")
method = &"summon_minion"
args = Array[BBVariant]([SubResource("BBVariant_wfjwy")])

[sub_resource type="BTCooldown" id="BTCooldown_25f70"]
duration = 6.0
cooldown_state_var = &"summon_cooldown"
children = [SubResource("BTCallMethod_4ath5")]

[sub_resource type="BTWait" id="BTWait_tdhfn"]

[sub_resource type="BTSequence" id="BTSequence_2n742"]
custom_name = "Summon minion"
children = [SubResource("BTCheckAgentProperty_olmdj"), SubResource("BTCheckVar_hc3o3"), SubResource("BTPlayAnimation_6leni"), SubResource("BTWait_8og18"), SubResource("BTAction_yeyns"), SubResource("BTCooldown_25f70"), SubResource("BTWait_tdhfn")]

[sub_resource type="BTAction" id="BTAction_33wje"]
script = SubResource("GDScript_k855k")
range_max = 700.0

[sub_resource type="BBNode" id="BBNode_w5fh2"]
saved_value = NodePath("AnimationPlayer")
resource_name = "AnimationPlayer"

[sub_resource type="BTPlayAnimation" id="BTPlayAnimation_qbxm8"]
animation_player = SubResource("BBNode_w5fh2")
animation_name = &"walk"
blend = 0.1

[sub_resource type="GDScript" id="GDScript_olfnc"]
script/source = "#*
#* arrive_pos.gd
#* =============================================================================
#* Copyright (c) 2023-present Serhii Snitsaruk and the LimboAI contributors.
#*
#* Use of this source code is governed by an MIT-style
#* license that can be found in the LICENSE file or at
#* https://opensource.org/licenses/MIT.
#* =============================================================================
#*
@tool
extends BTAction
## Moves the agent to the specified position, favoring horizontal movement. [br]
## Returns [code]SUCCESS[/code] when close to the target position (see [member tolerance]);
## otherwise returns [code]RUNNING[/code].

## Blackboard variable that stores the target position (Vector2)
@export var target_position_var := &\"pos\"

## Variable that stores desired speed (float)
@export var speed_var := &\"speed\"

## How close should the agent be to the target position to return SUCCESS.
@export var tolerance := 50.0

## Specifies the node to avoid (valid Node2D is expected).
## If not empty, agent will circle around the node while moving into position.
@export var avoid_var: StringName


func _generate_name() -> String:
	return \"Arrive  pos: %s%s\" % [
		LimboUtility.decorate_var(target_position_var),
		\"\" if avoid_var.is_empty() else \"  avoid: \" + LimboUtility.decorate_var(avoid_var)
	]


func _tick(_delta: float) -> Status:
	var target_pos: Vector2 = blackboard.get_var(target_position_var, Vector2.ZERO)
	if target_pos.distance_to(agent.global_position) < tolerance:
		return SUCCESS

	var speed: float = blackboard.get_var(speed_var, 10.0)
	var dist: float = absf(agent.global_position.x - target_pos.x)
	var dir: Vector2 = agent.global_position.direction_to(target_pos)

	# Prefer horizontal movement:
	var vertical_factor: float = remap(dist, 200.0, 500.0, 1.0, 0.0)
	vertical_factor = clampf(vertical_factor, 0.0, 1.0)
	dir.y *= vertical_factor

	# Avoid the node specified by `avoid_var`.
	# I.e., if `avoid_var` is set, agent will circle around that node while moving into position.
	if not avoid_var.is_empty():
		var avoid_node: Node2D = blackboard.get_var(avoid_var)
		if is_instance_valid(avoid_node):
			var distance_vector: Vector2 = avoid_node.global_position - agent.global_position
			if dir.dot(distance_vector) > 0.0:
				var side := dir.rotated(PI * 0.5).normalized()
				# The closer we are to the avoid target, the stronger is the avoidance.
				var strength: float = remap(distance_vector.length(), 200.0, 400.0, 1.0, 0.0)
				strength = clampf(strength, 0.0, 1.0)
				var avoidance := side * signf(-side.dot(distance_vector)) * strength
				dir += avoidance

	var desired_velocity: Vector2 = dir.normalized() * speed
	agent.move(desired_velocity)
	agent.update_facing()
	return RUNNING
"

[sub_resource type="BTAction" id="BTAction_dfifw"]
script = SubResource("GDScript_olfnc")

[sub_resource type="BTTimeLimit" id="BTTimeLimit_i05cm"]
time_limit = 3.0
children = [SubResource("BTAction_dfifw")]

[sub_resource type="BBNode" id="BBNode_vinxt"]
saved_value = NodePath("AnimationPlayer")
resource_name = "AnimationPlayer"

[sub_resource type="BTPlayAnimation" id="BTPlayAnimation_t7drr"]
animation_player = SubResource("BBNode_vinxt")
animation_name = &"idle"
blend = 0.1

[sub_resource type="BTRandomWait" id="BTRandomWait_axjfh"]

[sub_resource type="BTSequence" id="BTSequence_ks71q"]
custom_name = "Chill"
children = [SubResource("BTPlayAnimation_t7drr"), SubResource("BTRandomWait_axjfh")]

[sub_resource type="BTSequence" id="BTSequence_dss4d"]
custom_name = "Reposition"
children = [SubResource("BTAction_33wje"), SubResource("BTPlayAnimation_qbxm8"), SubResource("BTTimeLimit_i05cm"), SubResource("BTSequence_ks71q")]

[sub_resource type="BTSelector" id="BTSelector_gp6q5"]
children = [SubResource("BTRunLimit_x2jr4"), SubResource("BTSequence_2n742"), SubResource("BTSequence_dss4d")]

[resource]
description = "[con]CheckAgentProperty[/con] examines the agent’s property value and compares it to a given value or a blackboard variable. In this example, it checks if the [color=cyan]summon_count[/color] property is less than 6.
You can also check or share a [dec]Cooldown[/dec] in different parts of the behavior tree if you provide a blackboard variable for the [dec]Cooldown[/dec] decorator to use. [con]CheckVar[/con] is responsible here for examining the cooldown variable named \"summon_cooldown\"."
blackboard_plan = SubResource("BlackboardPlan_58oq1")
root_task = SubResource("BTSelector_gp6q5")
